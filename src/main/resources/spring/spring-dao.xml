<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!--<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://123.206.70.190:3306/turtlebot"></property>
		<property name="username" value="root"></property>
		<property name="password" value="753421"></property>
	</bean>-->

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.turtlebot.operation.dataobject" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.turtlebot.operation.dao" />
	</bean>


	<!-- ignite 配置，从持久化存储中读取数据-->
	<bean class="org.apache.ignite.configuration.IgniteConfiguration" id="ignite.cfg">
		<property name="cacheConfiguration">
			<list>
				<bean class="org.apache.ignite.configuration.CacheConfiguration">
					<property name="name" value="userCache"></property>
					<!-- Enable readThrough-->
					<property name="readThrough" value="true"></property>
					<property name="writeThrough" value="true"></property>
					<!-- Set cacheStoreFactory-->
					<property name="cacheStoreFactory">
						<bean class="javax.cache.configuration.FactoryBuilder" factory-method="factoryOf">
							<constructor-arg value="com.turtlebot.operation.service.traditional.UserStoreTest"></constructor-arg>
						</bean>
					</property>
					<property name="queryEntities">
						<list>
							<bean class="org.apache.ignite.cache.QueryEntity">
								<property name="keyType" value="java.lang.Integer"></property>
								<property name="valueType" value="com.turtlebot.operation.dataobject.User"></property>
								<property name="fields">
									<map>
										<entry key="id" value="java.lang.Integer"></entry>
										<entry key="name" value="java.lang.String"></entry>
										<entry key="gender" value="java.lang.String"></entry>
										<entry key="age" value="java.lang.Integer"></entry>
										<entry key="description" value="java.lang.String"></entry>
									</map>
								</property>
							</bean>
						</list>
					</property>
				</bean>
			</list>
		</property>
		<property name="peerClassLoadingEnabled" value="true"></property>

		<!-- Other Ignite configurations-->

	</bean>
</beans>